This is a Readme underconstruction take info from https://wordpress.com/read/feeds/46823049/posts/989026891. License is gpl.

One introductional word:
-------------------------
This starts as a loose suite of process steps, as scripts in a typical "all-against-nobody-selfdefense" buro put under unittest bound, thus obtaining a quality and adhoc usabiltiy property. 
These scripts can then be copied from the testsuite into the user's problem environment and called as in the test suite. In practice a carpet of templates, a "Template Teppich" can be build by cases of usage around them core scripts, so the core, pure script tested, can evelope.
The user can choose to take the recently used template script for -lets say- ocr-scanning or its prooved origin. The usage cases, seen as successful projects of yesterday, are the testscript of today, which is the template carpet of tomorrow.
That is the dev idea of this project by now, at least.(test driven developement)
Policy by now:
    -Tmp: Programs that do not let themself demonstate in /tmp alone, shall be searched demonstration then in a VM, qemu or the like.
    -local pathes: Scripts that depend heavily on pathes management as templates, can not be intergrated for privacy reasons. So the testscript will be crippled to one or two local pathes. There is no solution for the problem, that we all need pathes, but nobody shall know them.

Installation on your local machine
-----------------------------------
export Qemuburo_install_dir= localinstallpath_user_defined
echo "export Qemuburo_install_dir=localinstallpath_user_defined">> ~/.bashrc 
#read in Testscript how to run Testfunction then! For example this dummy:
cd qemuburo/
~/github_qemuburo/qemuburo$ python -m unittest Testqemuburo.qemuburoTestCase.test_pre_and_post_instalaion_tests_from_qemu_generation_to_ready_use_image

Completing state
---------------
2%

Usage
-----
The trick is find how the tester calls its functions to be tested. For the user the thinking is otherway around, if the test does so, for me is easiest and most secure to copy the incokation. 
So uncomment the line in the function you are interested in with:#print command
For example by running: 
time python -m unittest Testqemuburo.qemuburoTestCase.test_is_flatbad_one_page_orc_scanning_to_pdf_scanndistribute150825

you get

bash /home/githubqemuburo/github_qemuburo/Testsscripts/scanndistribute150825.sh   1 1 /tmp/qemuburotest/ 1 nonadf >> /tmp/qemuburotest/log.txt 2>&1

This is how the script scanndistribute is used: without ADF, using the physical scanner device non interactively, OCR...
Btw: this script can be used snippet wise by pasting it to console, too, this is nor forbidden. Neither testing it is forbidden. So there, is where you grasp the profit from. 

You do not know which is the functionality dealt with?: Just look at the testfunctions. There name should be self explanatory, such as:test_is_flatbad_one_page_orc_scanning_to_pdf_scanndistribute150825

Bugs/Problems/Support/Ideas/Fixes/Requests: use github forum